on: [push, pull_request]

name: Continuous integration

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.39.0
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # check:
  #   name: Check
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       rust:
  #         - 1.39.0
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: check

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust:
          - 1.39.0
    steps:
      - name: Git checkout
        uses: actions/checkout@v1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build (cargo build)
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Build tests (cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run
      - name: Test (cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast
  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       rust:
  #         - 1.39.0
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #     - run: rustup component add clippy
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings
