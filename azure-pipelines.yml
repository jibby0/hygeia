trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

resources:
  repositories:
    - repository: templates
      type: github
      name: xoac/rust-azure-pipelines
      ref: refs/heads/master ## TODO you may want to change it to refs/tags/TAG_NAME.
      endpoint: PipelinesTemplates
  containers:
  - container: tarpaulin
    image: xd009642/tarpaulin@sha256:e94bf79f5d60fd021383cdc011182066999a395223976b071fc9f8b75d10a35c
    options: --security-opt seccomp=unconfined

jobs:
# Check formatting
- template: ci/rustfmt.yml@templates
  parameters:
    name: rustfmt
    displayName: Check formatting

# Cargo check
- template: ci/cargo-check.yml@templates
  parameters:
    name: cargo_check
    displayName: Cargo check

# This represents the minimum Rust version supported.
# Tests are not run as tests may require newer versions of rust.
- template: ci/cargo-check.yml@templates
  parameters:
    name: minrust
    rust_version: 1.31.0 # The 2018 edition
    displayName: Verify minimum Rust version

- template: ci/cargo-clippy.yml@templates
  parameters:
    name: clippy
    rust: stable
    displayName: Clippy (linter)

################
# Test stage   #
###############

# Test stable
- template: ci/test.yml@templates
  parameters:
    name: cargo_test_stable
    displayName: Cargo test
    cross: true # Test on Windows and macOS

# # Test nightly
# - template: ci/test.yml@templates
#   parameters:
#     name: cargo_test_nightly
#     displayName: Cargo test
#     rust_version: nightly

# # Test cross
# # List of supported targets is available here: https://github.com/rust-embedded/cross#supported-targets
# - template: ci/cargo-cross.yml@templates
#   parameters:
#         name: cargo_cross
#         displayName: Cross check and test
#         rust_version: stable # You can specify here beta nightly or even 1.31
#         check_targets:
#           - x86_64-unknown-linux-gnu
#           - x86_64-unknown-linux-musl
#           - x86_64-apple-darwin
#           - x86_64-pc-windows-msvc
#         test_targets:
#           - x86_64-unknown-linux-gnu
#           - x86_64-unknown-linux-musl
#           - x86_64-apple-darwin
#           - x86_64-pc-windows-msvc

- job: code_coverage
  displayName: "Code coverage (tarpaulin)"
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    CARGO_TERM_VERBOSE: true
  container: tarpaulin
  steps:
    - script: |
        cargo --version
        rustc --version
        cargo tarpaulin --version
      displayName: "Show versions"
    - script: time cargo tarpaulin --verbose --out Xml
      displayName: "Run tarpaulin"
    - script: |
        bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)

###################
#    DEPLOY PART  #
###################
# TODO you need to modify git parameters and specify variable in pipeline. See [README.md](https://github.com/xoac/rust-azure-pipelines/blob/master/README.md)

# # Deploy doc
# - template: ci/github-deploy-doc.yml@templates
#   parameters:
#     name: github_deploy_doc
#     dependsOn:
#       - cargo_test_stable
#       - cargo_check
#       - cargo_cross
#     github:
#      user: xoac
#      email: sylwesterrapala@outlook.com
#      repo: https://github.com/xoac/rust-azure-pipelines/

# Release binary
- template: ci/github-release.yml@templates
  parameters:
   name: github_release
   dependsOn:
      - minrust
      - rustfmt
      - cargo_check
      - cargo_test_stable
      # - cargo_cross
   rust_version: stable
   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
   contents: |
     *
     !*.rlib
     !*.d
     !.*
   targets:
    # - x86_64-unknown-linux-gnu
    # - x86_64-pc-windows-gnu
    - x86_64-unknown-linux-musl
    - x86_64-pc-windows-msvc
    - x86_64-apple-darwin
   github:
    gitHubConnection: PipelinesTemplates
    repositoryName: nbigaouette/pycors
    isPreRelease: true
